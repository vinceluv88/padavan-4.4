name: 编译tsl0922-Padavan-4.4

on:
  workflow_dispatch:
    inputs:
      target:
        type: choice
        description: '请选择你的路由器型号'
        options:
        - Gee_B70
        - Nokia-Sbell_A-040W-Q
        - Xiaomi_CR6606
        - Xiaomi_CR6608
        - Xiaomi_CR6609
        - DLINK_DIR-878
        - DLINK_DIR-882
        - JCG_836PRO
        - JCG_AC860M
        - JCQ_Q20
        - JCQ_Q10Pro
        - JCG_Y2
        - Phicomm_K2P-USB
        - Phicomm_K2P
        - Xiaomi_4
        - Xiaomi_R3G
        - Xiaomi_R3P-PB
        - Xiaomi_R3P
        - Motorola_MR2600
        - Raisecom_MSG1500_X.00
        - Diting_NEWIFI3
        - Xiaomi_AC2100
        - Redmi_AC2100
        - Asus_RT-AC85P
        - Youhua_WR1200JS
        - Youhua_WR330
        - Xiaoyu_C1
        - Xiaoyu_C3
        - Xiaoyu_C5
        - ZTE_E8820S
        default: Redmi_AC2100
      plugins:
        description: '请选择你需要集成的插件 y 表示集成  n 表示不集成'
        required: true
        default: '{"vpnsvr":"n","vpncli":"n","vpncmd":"n","ss":"y","v2ray":"n","xray":"y","trojan":"n","singbox":"n","naiveproxy":"n","ssobfs":"n","dnsforwarder":"n","adbyby":"y","adguardhome":"n","smartdns":"n","aliddns":"n","zerotier":"n","ddnsto":"n","wireguard":"n","frpc":"n","aldrive":"n","sqm":"n","mentohust":"n","scutclient":"n","njitclient":"n","minieap":"n","dogcom":"n","transmission":"n","aria":"n","ariaweb":"n"}'
      firmwarever:
        description: '自定义固件版本号，默认为当天编译日期'
        required: false
        default: ''
env:
  REPOSITORY_URL: https://github.com/MeIsReallyBa/padavan-4.4.git
  WORK_PATH: /opt/padavan-4.4
  TIME_ZONE: Asia/Shanghai
  FIRMWARE_DATEPREFIX: $(date +"%Y%m%d")
  FIRMWARE_AUTHOR: vinceluv
  FIRMWARE_PATH: /opt/firmwares
  firmwarever: "${{ github.event.inputs.firmwarever }}"
jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - uses: actions/checkout@v4
    - uses: hendrikmuhs/ccache-action@main
    - uses: Bonnie2980/variable-mapper@master
      id: export
      with:
        key: "${{ github.event.inputs.target }}"
        map: |
          {
            "Gee_B70": {
              "model": "B70"
            },
            "Nokia-Sbell_A-040W-Q": {
              "model": "BELL-A040WQ"
            },
            "Xiaomi_CR6606": {
              "model": "CR660x"
            },
            "Xiaomi_CR6608": {
              "model": "CR660x"
            },
            "Xiaomi_CR6609": {
              "model": "CR660x"
            },
            "DLINK_DIR-878": {
              "model": "DIR-878"
            },
            "DLINK_DIR-882": {
              "model": "DIR-882"
            },
            "JCG_836PRO": {
              "model": "JCG-836PRO"
            },
            "JCG_AC860M": {
              "model": "JCG-AC860M"
            },
            "JCQ_Q20": {
              "model": "JCG-Q20"
            },
            "JCQ_Q10Pro": {
              "model": "JCG-Q20"
            },
            "JCG_Y2": {
              "model": "JCG-Y2"
            },
            "Phicomm_K2P-USB": {
              "model": "K2P-USB"
            },
            "Phicomm_K2P": {
              "model": "K2P"
            },
            "Xiaomi_4": {
              "model": "MI-4"
            },
            "Xiaomi_R3G": {
              "model": "MI-R3G"
            },
            "Xiaomi_R3P-PB": {
              "model": "MI-R3P-PB"
            },
            "Xiaomi_R3P": {
              "model": "MI-R3P"
            },
            "Motorola_MR2600": {
              "model": "MR2600"
            },
            "Raisecom_MSG1500_X.00": {
              "model": "MSG1500"
            },
            "Diting_NEWIFI3": {
              "model": "NEWIFI3"
            },
            "Xiaomi_AC2100": {
              "model": "R2100"
            },
            "Redmi_AC2100": {
              "model": "RM2100"
            },
            "Asus_RT-AC85P": {
              "model": "RT-AC85P"
            },
            "Youhua_WR1200JS": {
              "model": "WR1200JS"
            },
            "Youhua_WR330": {
              "model": "WR1200JS"
            },
            "Xiaoyu_C1": {
              "model": "XY-C1"
            },
            "Xiaoyu_C3": {
              "model": "XY-C1"
            },
            "Xiaoyu_C5": {
              "model": "XY-C1"
            },
            "ZTE_E8820S": {
              "model": "ZTE-E8820S"
            },
            ".*": {
              "model": "K2P"
            }
          }
        export_to: env
        mode: first_match
    - name: 获取最新go版本
      run: |
          latest_version=$(curl -L -k -s https://golang.org/dl/?mode=json | grep -m 1 -o '"version": "[^"]*' | sed 's/"version": "//' | tr -d 'go" ')
          echo "go版本=$latest_version"
          echo "gotag=$latest_version" >> $GITHUB_ENV
    - name: 安装最新go
      uses: actions/setup-go@v5
      with:
        go-version: '${{ env.gotag }}'
        check-latest: true
        cache: false
    - uses: actions/setup-node@v4
      with:
        node-version: 18
        check-latest: true
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd \
        fakeroot kmod cpio git python3-docutils gettext automake autopoint \
        texinfo build-essential help2man pkg-config zlib1g-dev libgmp3-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin libev-dev
        sudo timedatectl set-timezone "$TIME_ZONE"
    - name: 克隆padavan源码
      run: |
        git clone --depth=1 $REPOSITORY_URL $WORK_PATH
        cd $WORK_PATH
        sed -i '/cp -f/d' Makefile
    - name: 获取用户输入的集成插件
      run: |
        echo "vpnsvr=${{fromJson(github.event.inputs.plugins).vpnsvr}}" >> $GITHUB_ENV
        echo "vpncli=${{fromJson(github.event.inputs.plugins).vpncli}}" >> $GITHUB_ENV
        echo "vpncmd=${{fromJson(github.event.inputs.plugins).vpncmd}}" >> $GITHUB_ENV
        echo "ss=${{fromJson(github.event.inputs.plugins).ss}}" >> $GITHUB_ENV
        echo "v2ray=${{fromJson(github.event.inputs.plugins).v2ray}}" >> $GITHUB_ENV
        echo "xray=${{fromJson(github.event.inputs.plugins).xray}}" >> $GITHUB_ENV
        echo "trojan=${{fromJson(github.event.inputs.plugins).trojan}}" >> $GITHUB_ENV
        echo "singbox=${{fromJson(github.event.inputs.plugins).singbox}}" >> $GITHUB_ENV
        echo "naiveproxy=${{fromJson(github.event.inputs.plugins).naiveproxy}}" >> $GITHUB_ENV
        echo "ssobfs=${{fromJson(github.event.inputs.plugins).ssobfs}}" >> $GITHUB_ENV
        echo "dnsforwarder=${{fromJson(github.event.inputs.plugins).dnsforwarder}}" >> $GITHUB_ENV
        echo "adbyby=${{fromJson(github.event.inputs.plugins).adbyby}}" >> $GITHUB_ENV
        echo "adguardhome=${{fromJson(github.event.inputs.plugins).adguardhome}}" >> $GITHUB_ENV
        echo "smartdns=${{fromJson(github.event.inputs.plugins).smartdns}}" >> $GITHUB_ENV
        echo "aliddns=${{fromJson(github.event.inputs.plugins).aliddns}}" >> $GITHUB_ENV
        echo "zerotier=${{fromJson(github.event.inputs.plugins).zerotier}}" >> $GITHUB_ENV
        echo "ddnsto=${{fromJson(github.event.inputs.plugins).ddnsto}}" >> $GITHUB_ENV
        echo "wireguard=${{fromJson(github.event.inputs.plugins).wireguard}}" >> $GITHUB_ENV
        echo "frpc=${{fromJson(github.event.inputs.plugins).frpc}}" >> $GITHUB_ENV
        echo "aldrive=${{fromJson(github.event.inputs.plugins).aldrive}}" >> $GITHUB_ENV
        echo "sqm=${{fromJson(github.event.inputs.plugins).sqm}}" >> $GITHUB_ENV
        echo "mentohust=${{fromJson(github.event.inputs.plugins).mentohust}}" >> $GITHUB_ENV
        echo "scutclient=${{fromJson(github.event.inputs.plugins).scutclient}}" >> $GITHUB_ENV
        echo "njitclient=${{fromJson(github.event.inputs.plugins).njitclient}}" >> $GITHUB_ENV
        echo "minieap=${{fromJson(github.event.inputs.plugins).minieap}}" >> $GITHUB_ENV
        echo "dogcom=${{fromJson(github.event.inputs.plugins).dogcom}}" >> $GITHUB_ENV
        echo "transmission=${{fromJson(github.event.inputs.plugins).transmission}}" >> $GITHUB_ENV
        echo "aria=${{fromJson(github.event.inputs.plugins).aria}}" >> $GITHUB_ENV
        echo "ariaweb=${{fromJson(github.event.inputs.plugins).ariaweb}}" >> $GITHUB_ENV
    - name: 自定义配置文件
      run: |
        cd $WORK_PATH/trunk
        if [ ! -f configs/templates/${{ env.model }}.config ] ; then
        echo "configs/templates/${{ env.model }}.config not found"
        exit 1
        fi
        cp -f configs/templates/${{ env.model }}.config .config
    - name: 开始编译
      run: |
        cd $WORK_PATH
        #去掉编译警告中断编译
        sed -i "s/-Wall/-w/g" ./trunk/linux-4.4.x/Makefile
        #修改adg为最新版本
        adg_tag="$( curl -L --connect-timeout 3 -s  https://api.github.com/repos/AdguardTeam/AdGuardHome/releases/latest  2>&1 | grep 'tag_name' | cut -d\" -f4 | tr -d 'v')"
        sed -i "s/^\(PKG_VERSION:=\).*/\1$adg_tag/g" ./trunk/user/adguardhome/Makefile
        sed -i "s/^\(PKG_HASH:=\).*/\1skip/g" ./trunk/user/adguardhome/Makefile
        rm -rf ./trunk/user/adguardhome/patches
        #修改v2ray最新
        v2ray_tag="$( curl -L --connect-timeout 3 -s  https://api.github.com/repos/v2fly/v2ray-core/releases/latest  2>&1 | grep 'tag_name' | cut -d\" -f4 | tr -d 'v')"
        sed -i "s/^\(PKG_VERSION:=\).*/\1$v2ray_tag/g" ./trunk/user/v2ray/Makefile
        sed -i "s/^\(PKG_HASH:=\).*/\1skip/g" ./trunk/user/v2ray/Makefile
        #修改xray最新
        xray_tag="$( curl -L --connect-timeout 3 -s  https://api.github.com/repos/XTLS/Xray-core/releases/latest  2>&1 | grep 'tag_name' | cut -d\" -f4 | tr -d 'v')"
        sed -i "s/^\(PKG_VERSION:=\).*/\1$xray_tag/g" ./trunk/user/xray/Makefile
        sed -i "s/^\(PKG_HASH:=\).*/\1skip/g" ./trunk/user/xray/Makefile
        #修改naiveproxy版本
        nai_tag="$( curl -L --connect-timeout 3 -s  https://api.github.com/repos/klzgrad/naiveproxy/releases/latest  2>&1 | grep 'tag_name' | cut -d\" -f4 | tr -d 'v')"
        sed -i "s/^\(PKG_VERSION:=\).*/\1$nai_tag/g" ./trunk/user/naiveproxy/Makefile
        sed -i 's/HASH:=.*$/HASH:=skip/g' ./trunk/user/naiveproxy/Makefile
        #修改Aria2
        sed -i 's|-fvisibility=hidden|-fvisibility=hidden -I\$(ROOTDIR)/stage/include/libxml2|g' ./trunk/user/aria2/Makefile
        sed -i 's|-static-libstdc++|-static-libstdc++ -L\$(ROOTDIR)/stage/lib|g'  ./trunk/user/aria2/Makefile
        sed -i 's|--prefix=/usr|--prefix=/usr CXXFLAGS="\$(CFLAGS)"|g' ./trunk/user/aria2/Makefile
        
        echo "开始编译${{ env.model }}"
        sudo make ${{ env.model }} TOOLCHAIN=mipsel-linux-musl
        echo "FIRMWARE_DATEPREFIX=$(date +"%Y%m%d")" >> $GITHUB_ENV
    - name: 打包命名固件
      id: organize
      run: |
        mkdir -p $FIRMWARE_PATH/
        cd $WORK_PATH/trunk/images
        for firmwarefile in $(ls *.trx)
        do 
        trxmd5=$(md5sum $firmwarefile | awk '{print $1}')
        sudo mv $firmwarefile $FIRMWARE_PATH/${trxmd5}-${FIRMWARE_DATEPREFIX}"_"${FIRMWARE_AUTHOR}"_"${{ env.model }}"_padavan4.4.trx"
        done
        cd $FIRMWARE_PATH
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "STATUS=success" >> $GITHUB_ENV
    - name : 上传固件包
      uses: actions/upload-artifact@main
      if: env.STATUS == 'success'
      with:
        name: ${{ env.model }}_padavan4.4
        path: ${{ env.FIRMWARE }}
